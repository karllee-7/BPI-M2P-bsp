# ~/.bashrc: executed by bash(1) for non-login interactive shells.
echo "[sinlinx] profile"
export PATH=\
/bin:\
/sbin:\
/usr/bin:\
/usr/sbin:\
/usr/bin/X11:\
/usr/local/bin

# If running interactively, then:
if [ "$PS1" ]; then

    if [ "$BASH" ]; then
	export PS1="[\u@\h \w]\\$"
	alias ll='/bin/ls --color=tty -laFh'
	alias ls='/bin/ls --color=tty -F'
	export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:';
    else
      if [ "`id -u`" -eq 0 ]; then 
	export PS1='[\u@\h \w]#'
      else
	export PS1='[\u@\h \w]$'
      fi
    fi

    export USER=`id -un`
    export LOGNAME=$USER
    export HOSTNAME=`/bin/hostname`
    export HISTSIZE=1000
    export HISTFILESIZE=1000
    export PAGER='/bin/more '
    export EDITOR='/bin/vi'
    export INPUTRC=/etc/inputrc
    export DMALLOC_OPTIONS=debug=0x34f47d83,inter=100,log=logfile

    ### Some aliases
    alias ps2='ps facux '
    alias ps1='ps faxo "%U %t %p %a" '
    alias af='ps af'
    alias cls='clear'
    alias df='df -h'
    alias indent='indent -bad -bap -bbo -nbc -br -brs -c33 -cd33 -ncdb -ce -ci4 -cli0 -cp33 -cs -d0 -di1 -nfc1 -nfca -hnl -i4 -ip0 -l75 -lp -npcs -npsl -nsc -nsob -nss -ts4 '
    #alias bc='bc -l'
    alias minicom='minicom -c on'
    alias calc='calc -Cd '
    alias bc='calc -Cd '
fi;

## insmod
if [ -x /sinlinx/setup_module.sh ]; then
    /sinlinx/setup_module.sh
fi

## touch screen
export TSLIB_TSEVENTTYPE=H3600
export TSLIB_CONSOLEDEVICE=none
export TSLIB_FBDEVICE=/dev/fb0
export TSLIB_CALIBFILE=/etc/pointercal
export TSLIB_CONFFILE=/etc/ts.conf
export TSLIB_PLUGINDIR=/usr/lib/ts
if [ -e "/dev/input/event4" ]; then
	export TSLIB_TSDEVICE=/dev/input/event4
elif [ -e "/dev/input/event3" ]; then
	export TSLIB_TSDEVICE=/dev/input/event3
elif [ -e "/dev/input/event2" ]; then
	export TSLIB_TSDEVICE=/dev/input/event2
elif [ -e "/dev/input/event1" ]; then
	export TSLIB_TSDEVICE=/dev/input/event1
fi

############################################
#export QTDIR=/opt/qt-5.9.6-armhf-4.9.4-linuxfb
export QTDIR=/opt/qt-5.9.6-armhf-4.9.4-eglfs
export QT_QPA_PLATFORM=eglfs
#export QT_QPA_PLATFORM=linuxfb

if [ "$QT_QPA_PLATFORM" == "linuxfb" ]; then
	export QWS_DISPLAY=LinuxFb:/dev/fb0
	export QWS_SIZE=800x480
	export QWS_MOUSE_PROTO=tslib:$TSLIB_TSDEVICE

elif [ "$QT_QPA_PLATFORM" == "eglfs" ]; then
	export QT_QPA_EGLFS_INTEGRATION=eglfs_mali
	#export QT_QPA_EGLFS_PHYSICAL_WIDTH=
	#export QT_QPA_EGLFS_PHYSICAL_HEIGHT=
	#export QT_QPA_EGLFS_ROTATION=
	export QT_QPA_EGLFS_FB=/dev/fb0
	export QT_QPA_EGLFS_WIDTH=800
	export QT_QPA_EGLFS_HEIGHT=480
	#export QT_QPA_EGLFS_DEPTH=32
	#export QT_QPA_EGLFS_DEBUG=1
	#export QT_QPA_EGLFS_DISABLE_INPUT=1
	export QT_QPA_EGLFS_HIDECURSOR=1
	#export QT_QPA_EGLFS_TSLIB=1
fi

export QT_QPA_GENERIC_PLUGINS=tslib
export QT_QPA_FONTDIR=/usr/lib/fonts
export QT_QPA_PLATFORM_PLUGIN_PATH=${QTDIR}/plugins
export QML_IMPORT_PATH=${QTDIR}/qml
export QML2_IMPORT_PATH=${QTDIR}/qml
########################################
#export DFBARGS=module-dir=/opt/directfb-1.7-gnueabihf-4.9.4/lib/directfb-1.8-0
########################################
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/opt/ffmpeg-3.4.2-armhf-4.9.4/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/opt/qt-5.9.6-armhf-4.9.4-eglfs/lib:$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=/opt/CedarX-12.06.2015-gnueabihf-4.9.4/lib:$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=/opt/alsa-lib-1.1.6-armhf-4.9.4/lib:$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=/mnt/lib:$LD_LIBRARY_PATH

#sleep 1  #wait touchscreen

##autorun qt demo

## autorun
#if [ -x /sinlinx/autorun.sh ]; then
#    /sinlinx/autorun.sh
#fi

if [ -e "/dev/mmcblk1p3" ]; then
	mount /dev/mmcblk1p3 /home/default
	echo "mount mount /dev/mmcblk1p3 /home/default"
elif [ -e "/dev/mmcblk1p2" ]; then
	mount /dev/mmcblk1p2 /home/default
	echo "mount mount /dev/mmcblk1p2 /home/default"
elif [ -e "/dev/mmcblk1p1" ]; then
	mount /dev/mmcblk1p1 /home/default
	echo "mount mount /dev/mmcblk1p1 /home/default"
else
	echo "no ext memory"
fi

./home/5cun_linux_tongyong

#udhcpc
#mount -t nfs 192.168.1.110:/home/karllee/share /mnt -o nolock
